{"version":3,"file":"static/js/697.759a8d8b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/phoneBook.module.css?acd4","components/Form.jsx","components/Contacts.jsx","components/Filter.jsx","redux/filter/filter-selectors.js","pages/Phonebook/Phonebook.jsx","redux/contacts/contacts-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"phoneBook_section__82jdA\",\"input\":\"phoneBook_input__gvWDW\",\"checkbox\":\"phoneBook_checkbox__f9sj6\",\"block\":\"phoneBook_block__BVEEw\",\"blockContact\":\"phoneBook_blockContact__7jJT1\",\"title\":\"phoneBook_title__RUn34\",\"name\":\"phoneBook_name__e2DPy\",\"nameContact\":\"phoneBook_nameContact__K3frU\",\"button\":\"phoneBook_button__nB+gh\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../components/phoneBook.module.css';\n\nconst Form = ({ onSubmit }) => {\n  const initialState = {\n    name: '',\n    number: '',\n    main: false,\n  };\n\n  const [state, setState] = useState({ ...initialState });\n\n  const { name, number, main } = state;\n\n  // Якщо робити по одному хуку на кожне значення:\n  // const [name, setName] = useState('');\n  // const [number, setNumber] = useState('');\n\n  const onChange = event => {\n    const { name, value, type, checked } = event.target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => {\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ name, number, main });\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...initialState });\n  };\n\n  return (\n    <>\n      <form className={styles.block} onSubmit={handleSubmit}>\n        <label htmlFor=\"get-name\">\n          <p className={styles.name}>Name</p>\n          <input\n            value={name}\n            onChange={onChange}\n            // Якщо по одному хуку:\n            // onChange={event => {\n            //   setName(event.target.value);\n            // }}\n            className={styles.input}\n            placeholder=\"Name of contact\"\n            id=\"get-name\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label htmlFor=\"get-number\">\n          <p className={styles.name}>Number</p>\n          <input\n            id=\"get-number\"\n            onChange={onChange}\n            className={styles.input}\n            placeholder=\"Number of contact\"\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <label htmlFor=\"get-main\">\n          <p className={styles.name}>Add to main contact?</p>\n          <input\n            id=\"get-main\"\n            className={styles.checkbox}\n            checked={main}\n            onChange={onChange}\n            type=\"checkbox\"\n            name=\"main\"\n          />\n        </label>\n\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport styles from '../components/phoneBook.module.css';\n\nconst Contacts = ({ onDelete, contacts }) => {\n  const elements = contacts.map(({ name, number, id, main }) => (\n    <li key={id} style={{ fontWeight: main ? 'bold' : 'normal' }}>\n      <p className={styles.nameContact}>{name}</p>\n      <p className={styles.nameContact}>{number}</p>\n      <button onClick={() => onDelete(id)}>Delete</button>\n    </li>\n  ));\n\n  return <ol>{elements}</ol>;\n};\n\nexport default Contacts;\n\nContacts.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      // number: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      main: PropTypes.bool.isRequired,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\nimport styles from '../components/phoneBook.module.css';\n\nconst Filter = ({ onChangeFilter, value }) => {\n  return (\n    <>\n      <p className={styles.name}>Find contacts by name</p>\n      <input\n        onChange={onChangeFilter}\n        className={styles.input}\n        placeholder=\"Name of contact\"\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","export const getFilter = store => store.filter;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Form from '../../components/Form';\nimport Contacts from '../../components/Contacts';\nimport Filter from '../../components/Filter';\nimport styles from '../../components/phoneBook.module.css';\nimport {\n  fetchAllContacts,\n  fetchAddContacts,\n  fetchDeleteContacts,\n} from 'redux/contacts/contacts-operations';\nimport { setFilter } from '../../redux/filter/filter-slice';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport { getFilter } from '../../redux/filter/filter-selectors';\n\nconst Phonebook = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const handleAddContact = ({ name, number, main }) => {\n    dispatch(fetchAddContacts({ name, number, main }));\n  };\n\n  const onDelete = id => {\n    dispatch(fetchDeleteContacts(id));\n  };\n\n  const onChangeFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  const isContacts = Boolean(filteredContacts.length);\n\n  return (\n    <div className={styles.section}>\n      <h2 className={styles.title}>Phonebook</h2>\n      <Form onSubmit={handleAddContact} />\n      <div className={styles.blockContact}>\n        <h2 className={styles.title}>Contacts</h2>\n        <Filter onChangeFilter={onChangeFilter} value={filter} />\n        {isContacts && (\n          <Contacts contacts={filteredContacts} onDelete={onDelete} />\n        )}\n        {!isContacts && <p>There are no contacts in your Phone Book...</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Phonebook;\n","export const getAllContacts = ({contacts}) => contacts.items;\n\nexport const getMainContacts = ({contacts}) => {\nconst mainСontacts = contacts.items.filter(({ main }) => main);\n    return mainСontacts;\n}\nexport const getFilteredContacts = ({contacts, filter}) => {\n    if (!filter) {\n        return contacts.items\n    }\n    const normalizedFilter = filter.toLowerCase();\n    const result = contacts.items.filter(({ name }) => {\n        return name.toLowerCase().includes(normalizedFilter);\n    });\n    return result;\n}"],"names":["onSubmit","initialState","name","number","main","useState","state","setState","onChange","event","target","value","type","checked","newValue","prevState","reset","className","styles","preventDefault","htmlFor","placeholder","id","pattern","title","required","onDelete","elements","contacts","map","style","fontWeight","onClick","onChangeFilter","getFilter","store","filter","filteredContacts","useSelector","getFilteredContacts","dispatch","useDispatch","useEffect","fetchAllContacts","isContacts","Boolean","length","fetchAddContacts","setFilter","fetchDeleteContacts","getMainContacts","items","normalizedFilter","toLowerCase","includes"],"sourceRoot":""}
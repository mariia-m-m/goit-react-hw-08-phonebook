{"version":3,"file":"static/js/730.3a206507.chunk.js","mappings":"kLAeA,UAZqB,WACnB,IAEMA,GAFeC,EAAAA,EAAAA,IAAYC,EAAAA,IAEHC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OAChC,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EADuB,IAMlC,OAAO,wBAAKJ,GACb,C,+ECbM,IAgBME,EAAkB,SAAC,GAAgB,IAAfK,EAAc,EAAdA,SAC7B,OAAKA,GAAaA,EAASC,MAGND,EAASC,MAAMC,QAAO,qBAAGC,IAAH,IAFhC,EAId,EAEYC,EAAsB,SAAC,GAAwB,IAAvBJ,EAAsB,EAAtBA,SAAUE,EAAY,EAAZA,OAC3C,IAAKF,IAAaA,EAASC,MACvB,MAAO,GAEX,IAAKC,EACD,OAAOF,EAASC,MAEpB,IAAMI,EAAmBH,EAAOI,cAIhC,OAHeN,EAASC,MAAMC,QAAO,YACjC,OAD+C,EAAXJ,KACxBQ,cAAcC,SAASF,EACtC,GAEJ,C","sources":["pages/MainContacts/MainContacts.jsx","redux/contacts/contacts-selectors.js"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { getMainContacts } from '../../redux/contacts/contacts-selectors';\n\nconst MainContacts = () => {\n  const mainContacts = useSelector(getMainContacts);\n\n  const elements = mainContacts.map(({ id, name, number }) => (\n    <li key={id}>\n      <p>{name}</p>\n      <p>{number}</p>\n    </li>\n  ));\n  return <ol>{elements}</ol>;\n};\n\nexport default MainContacts;\n","export const getAllContacts = ({contacts}) => contacts.items;\n\n// export const getMainContacts = ({contacts}) => {\n// const mainСontacts = contacts.items.filter(({ main }) => main);\n//     return mainСontacts;\n// }\n// export const getFilteredContacts = ({contacts, filter}) => {\n//     if (!filter) {\n//        console.log(contacts.items)\n//     }\n//     const normalizedFilter = filter.toLowerCase();\n//     const result = contacts.items.filter(({ name }) => {\n//         return name.toLowerCase().includes(normalizedFilter);\n//     });\n//     return result;\n// }\nexport const getMainContacts = ({contacts}) => {\n    if (!contacts || !contacts.items) {\n        return [];\n    }\n    const mainContacts = contacts.items.filter(({ main }) => main);\n    return mainContacts;\n}\n\nexport const getFilteredContacts = ({contacts, filter}) => {\n    if (!contacts || !contacts.items) {\n        return [];\n    }\n    if (!filter) {\n        return contacts.items\n    }\n    const normalizedFilter = filter.toLowerCase();\n    const result = contacts.items.filter(({ name }) => {\n        return name.toLowerCase().includes(normalizedFilter);\n    });\n    return result;\n}"],"names":["elements","useSelector","getMainContacts","map","id","name","number","contacts","items","filter","main","getFilteredContacts","normalizedFilter","toLowerCase","includes"],"sourceRoot":""}
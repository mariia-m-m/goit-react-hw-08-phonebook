{"version":3,"file":"static/js/587.80c0d48d.chunk.js","mappings":"mQA+FA,EA3Fa,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACRC,EAAe,CACnBC,KAAM,GACNC,OAAQ,GACRC,MAAM,GAGR,GAA0BC,EAAAA,EAAAA,WAAS,UAAKJ,IAAxC,eAAOK,EAAP,KAAcC,EAAd,KAEQL,EAAuBI,EAAvBJ,KAAMC,EAAiBG,EAAjBH,OAAQC,EAASE,EAATF,KAMhBI,EAAW,SAAAC,GACf,MAAuCA,EAAMC,OAArCR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,QACrBC,EAAoB,aAATF,EAAsBC,EAAUF,EACjDJ,GAAS,SAAAQ,GACP,OAAO,kBAAKA,GAAZ,cAAwBb,EAAOY,GAChC,GACF,EAQKE,EAAQ,WACZT,GAAS,UAAKN,GACf,EAED,OACE,+BACE,kBAAMgB,UAAWC,EAAAA,EAAAA,MAAclB,SAZd,SAAAS,GACnBA,EAAMU,iBACNnB,EAAS,CAAEE,KAAAA,EAAMC,OAAAA,EAAQC,KAAAA,IACzBY,GACD,EAQG,WACE,mBAAOI,QAAQ,WAAf,WACE,cAAGH,UAAWC,EAAAA,EAAAA,KAAd,mBACA,kBACEP,MAAOT,EACPM,SAAUA,EAKVS,UAAWC,EAAAA,EAAAA,MACXG,YAAY,kBACZC,GAAG,WACHV,KAAK,OACLV,KAAK,OACLqB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,WAAS,QAGb,mBAAON,QAAQ,aAAf,WACE,cAAGH,UAAWC,EAAAA,EAAAA,KAAd,qBACA,kBACEI,GAAG,aACHd,SAAUA,EACVS,UAAWC,EAAAA,EAAAA,MACXG,YAAY,oBACZV,MAAOR,EACPS,KAAK,MACLV,KAAK,SACLqB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAOL,QAAQ,WAAf,WACE,cAAGH,UAAWC,EAAAA,EAAAA,KAAd,mCACA,kBACEI,GAAG,WACHL,UAAWC,EAAAA,EAAAA,SACXL,QAAST,EACTI,SAAUA,EACVI,KAAK,WACLV,KAAK,aAIT,mBAAQe,UAAWC,EAAAA,EAAAA,OAAeN,KAAK,SAAvC,6BAMP,E,SC3CD,EAvCkB,WAIhB,IAAMe,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,IAgBJ,OACE,iBAAKV,UAAWC,EAAAA,EAAAA,QAAhB,WACE,eAAID,UAAWC,EAAAA,EAAAA,MAAf,wBACA,SAAC,EAAD,CAAMlB,SAjBe,SAAC,GAA4B,IAA1BE,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACxCuB,GAASI,EAAAA,EAAAA,IAAiB,CAAE7B,KAAAA,EAAMC,OAAAA,EAAQC,KAAAA,IAC3C,KAgBG,gBAAKa,UAAWC,EAAAA,EAAAA,iBASrB,C,qBC/CD,KAAgB,QAAU,2BAA2B,MAAQ,yBAAyB,SAAW,4BAA4B,MAAQ,yBAAyB,aAAe,gCAAgC,MAAQ,yBAAyB,KAAO,wBAAwB,YAAc,+BAA+B,OAAS,0B","sources":["components/Form.jsx","pages/Phonebook/Phonebook.jsx","webpack://goit-react-hw-08-phonebook/./src/components/phoneBook.module.css?acd4"],"sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../components/phoneBook.module.css';\n\nconst Form = ({ onSubmit }) => {\n  const initialState = {\n    name: '',\n    number: '',\n    main: false,\n  };\n\n  const [state, setState] = useState({ ...initialState });\n\n  const { name, number, main } = state;\n\n  // Якщо робити по одному хуку на кожне значення:\n  // const [name, setName] = useState('');\n  // const [number, setNumber] = useState('');\n\n  const onChange = event => {\n    const { name, value, type, checked } = event.target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => {\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ name, number, main });\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...initialState });\n  };\n\n  return (\n    <>\n      <form className={styles.block} onSubmit={handleSubmit}>\n        <label htmlFor=\"get-name\">\n          <p className={styles.name}>Name</p>\n          <input\n            value={name}\n            onChange={onChange}\n            // Якщо по одному хуку:\n            // onChange={event => {\n            //   setName(event.target.value);\n            // }}\n            className={styles.input}\n            placeholder=\"Name of contact\"\n            id=\"get-name\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            autoFocus\n          />\n        </label>\n        <label htmlFor=\"get-number\">\n          <p className={styles.name}>Number</p>\n          <input\n            id=\"get-number\"\n            onChange={onChange}\n            className={styles.input}\n            placeholder=\"Number of contact\"\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <label htmlFor=\"get-main\">\n          <p className={styles.name}>Add to main contact?</p>\n          <input\n            id=\"get-main\"\n            className={styles.checkbox}\n            checked={main}\n            onChange={onChange}\n            type=\"checkbox\"\n            name=\"main\"\n          />\n        </label>\n\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Form from '../../components/Form';\n// import Contacts from '../../components/Contacts';\n// import Filter from '../../components/Filter';\nimport styles from '../../components/phoneBook.module.css';\nimport {\n  fetchAllContacts,\n  fetchAddContacts,\n} from 'redux/contacts/contacts-operations';\n\nconst Phonebook = () => {\n  // const filteredContacts = useSelector(getFilteredContacts);\n  // const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const handleAddContact = ({ name, number, main }) => {\n    dispatch(fetchAddContacts({ name, number, main }));\n  };\n\n  // const onDelete = id => {\n  //   dispatch(fetchDeleteContacts(id));\n  // };\n\n  // const onChangeFilter = ({ target }) => {\n  //   dispatch(setFilter(target.value));\n  // };\n\n  // const isContacts = Boolean(filteredContacts.length);\n\n  return (\n    <div className={styles.section}>\n      <h2 className={styles.title}>Phonebook</h2>\n      <Form onSubmit={handleAddContact} />\n      <div className={styles.blockContact}>\n        {/* <Filter onChangeFilter={onChangeFilter} value={filter} /> */}\n        {/* {isContacts && (\n          <Contacts contacts={filteredContacts} onDelete={onDelete} />\n        )}\n        {!isContacts && <p>There are no contacts in your Phone Book...</p>} */}\n      </div>\n    </div>\n  );\n};\n\nexport default Phonebook;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"phoneBook_section__82jdA\",\"input\":\"phoneBook_input__gvWDW\",\"checkbox\":\"phoneBook_checkbox__f9sj6\",\"block\":\"phoneBook_block__BVEEw\",\"blockContact\":\"phoneBook_blockContact__7jJT1\",\"title\":\"phoneBook_title__RUn34\",\"name\":\"phoneBook_name__e2DPy\",\"nameContact\":\"phoneBook_nameContact__K3frU\",\"button\":\"phoneBook_button__nB+gh\"};"],"names":["onSubmit","initialState","name","number","main","useState","state","setState","onChange","event","target","value","type","checked","newValue","prevState","reset","className","styles","preventDefault","htmlFor","placeholder","id","pattern","title","required","autoFocus","dispatch","useDispatch","useEffect","fetchAllContacts","fetchAddContacts"],"sourceRoot":""}
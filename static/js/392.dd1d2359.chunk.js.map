{"version":3,"file":"static/js/392.dd1d2359.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/phoneBook.module.css?acd4","components/Form.jsx","components/Contacts.jsx","components/Filter.jsx","shared/contactsApi.js","redux/contacts/contacts-operations.js","redux/filter/filter-slice.js","redux/filter/filter-selectors.js","pages/Phonebook/Phonebook.jsx","redux/contacts/contacts-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"phoneBook_section__82jdA\",\"input\":\"phoneBook_input__gvWDW\",\"checkbox\":\"phoneBook_checkbox__f9sj6\",\"block\":\"phoneBook_block__BVEEw\",\"blockContact\":\"phoneBook_blockContact__7jJT1\",\"title\":\"phoneBook_title__RUn34\",\"name\":\"phoneBook_name__e2DPy\",\"nameContact\":\"phoneBook_nameContact__K3frU\",\"button\":\"phoneBook_button__nB+gh\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../components/phoneBook.module.css';\n\nconst Form = ({ onSubmit }) => {\n  const initialState = {\n    name: '',\n    number: '',\n    main: false,\n  };\n\n  const [state, setState] = useState({ ...initialState });\n\n  const { name, number, main } = state;\n\n  // Якщо робити по одному хуку на кожне значення:\n  // const [name, setName] = useState('');\n  // const [number, setNumber] = useState('');\n\n  const onChange = event => {\n    const { name, value, type, checked } = event.target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => {\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ name, number, main });\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...initialState });\n  };\n\n  return (\n    <>\n      <form className={styles.block} onSubmit={handleSubmit}>\n        <label htmlFor=\"get-name\">\n          <p className={styles.name}>Name</p>\n          <input\n            value={name}\n            onChange={onChange}\n            // Якщо по одному хуку:\n            // onChange={event => {\n            //   setName(event.target.value);\n            // }}\n            className={styles.input}\n            placeholder=\"Name of contact\"\n            id=\"get-name\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            autoFocus\n          />\n        </label>\n        <label htmlFor=\"get-number\">\n          <p className={styles.name}>Number</p>\n          <input\n            id=\"get-number\"\n            onChange={onChange}\n            className={styles.input}\n            placeholder=\"Number of contact\"\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <label htmlFor=\"get-main\">\n          <p className={styles.name}>Add to main contact?</p>\n          <input\n            id=\"get-main\"\n            className={styles.checkbox}\n            checked={main}\n            onChange={onChange}\n            type=\"checkbox\"\n            name=\"main\"\n          />\n        </label>\n\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport styles from '../components/phoneBook.module.css';\n\nconst Contacts = ({ onDelete, contacts }) => {\n  const elements = contacts.map(({ name, number, id, main }) => (\n    <li key={id} style={{ fontWeight: main ? 'bold' : 'normal' }}>\n      <p className={styles.nameContact}>{name}</p>\n      <p className={styles.nameContact}>{number}</p>\n      <button onClick={() => onDelete(id)}>Delete</button>\n    </li>\n  ));\n\n  return <ol>{elements}</ol>;\n};\n\nexport default Contacts;\n\nContacts.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      // number: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      main: PropTypes.bool.isRequired,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\nimport styles from '../components/phoneBook.module.css';\n\nconst Filter = ({ onChangeFilter, value }) => {\n  return (\n    <>\n      <p className={styles.name}>Find contacts by name</p>\n      <input\n        onChange={onChangeFilter}\n        className={styles.input}\n        placeholder=\"Name of contact\"\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import axios from 'axios'\n\nconst contactInctance = axios.create({\n    baseURL: \"https://64022085ab6b7399d0b4823a.mockapi.io/api/contacts\"\n})\n\nexport const getAllcontacts = async () => {\n    const { data } = await contactInctance.get(\"/\");\n    return data\n}\n\nexport const addContact = async (data) => {\n    const { data: result } = await contactInctance.post(\"/\", data);\n    return result\n}\n\nexport const deleteContact = async (id) => {\n    const { data } = await contactInctance.delete(`/${id}`);\n    return data;\n}","import {createAsyncThunk} from \"@reduxjs/toolkit\"\nimport * as api from \"../../shared/contactsApi\";\n\nexport const fetchAllContacts = createAsyncThunk(\n    \"contacts/fetch-all\",\n    async (_, thunkAPI)=>{\n        try {\n            const data = await api.getAllcontacts();\n            return data\n        }\n        catch ({ response }) {\n            return thunkAPI.rejectWithValue(response.data)\n            \n        }\n }   \n)\n\nexport const fetchAddContacts = createAsyncThunk(\n    \"contacts/add\",\n    async (data, thunkAPI) => {\n        try {\n            const result = await api.addContact(data);\n            return result\n        }\n        catch ({ response }) {\n            return thunkAPI.rejectWithValue(response.data)\n            \n        }\n    },\n        {condition: ({name,number}, { getState }) => {\n            const { contacts } = getState();\n  const normalizedName = name.toLowerCase();\n    const result = contacts.items.find(item => {\n      return (\n        item.name.toLowerCase() === normalizedName && item.number === number\n      )\n    })\n            if (result) {\n             alert(`Dear User, ${name} with number ${number} is already in your contacts!`);\n            return false\n        }\n        }\n        }  \n)\n\nexport const fetchDeleteContacts = createAsyncThunk(\n    \"contacts/delete\",\n    async ( id, {rejectWithValue})=>{\n        try {\n          await api.deleteContact(id);\n            return id\n        }\n        catch ({ response }) {\n            return rejectWithValue(response.data)\n            \n        }\n }   \n)\n\n\n// export const fetchAllContacts = () => {\n//     const func = async (dispatch) => {\n//         try {\n//             dispatch(actions.fetchAllContactsLoading()) \n//             //  запит пiшов\n//             const data = await api.getAllcontacts();\n//             dispatch(actions.fetchAllContactsSuccess(data))\n//              // запит отримано\n//         }\n//         catch ({ response }) {\n//             dispatch(actions.fetchAllContactsError(response.data.message))\n            \n//         }\n//     }\n//     return func\n// }\n\n\n// export const fetchAddContacts = (data) => {\n//         const func = async (dispatch,getState) => {\n//             try {\n//                 const { contacts } = getState();\n//                 if (isDublicate(contacts.items, data)) {\n//                     alert(`Dear User, ${data.name} with number ${data.number} is already in your contacts!`);\n//                     return false\n//                 }\n//             dispatch(actions.fetchAddContactsLoading()) \n//             const result = await api.addContact(data);\n//             dispatch(actions.fetchAddContactsSuccess(result))\n//         }\n//         catch ({ response }) {\n//             dispatch(actions.fetchAddContactsError(response.data.message))\n\n//         }\n//     }\n//     return func\n// }\n\n// export const fetchDeleteContacts = (id) => {\n//         const func = async (dispatch) => {\n//             try {\n//                 dispatch(actions.fetchDeleteContactsLoading());\n//                 await api.deleteContact(id);\n//                 dispatch(actions.fetchDeleteContactsSuccess(id))\n//         }\n//         catch ({ response }) {\n//             dispatch(actions.fetchDeleteContactsError(response.data.message))\n\n//         }\n//     }\n//     return func\n// }","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst filterSlice = createSlice({\n    name: \"filter\",\n    initialState: \"\",\n    reducers: {\n        setFilter: (_,{payload})=>payload\n        \n    }\n})\n    \nexport const { setFilter } = filterSlice.actions;\nexport default filterSlice.reducer","export const getFilter = store => store.filter;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Form from '../../components/Form';\nimport Contacts from '../../components/Contacts';\nimport Filter from '../../components/Filter';\nimport styles from '../../components/phoneBook.module.css';\nimport {\n  fetchAllContacts,\n  fetchAddContacts,\n  fetchDeleteContacts,\n} from 'redux/contacts/contacts-operations';\nimport { setFilter } from '../../redux/filter/filter-slice';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport { getFilter } from '../../redux/filter/filter-selectors';\n\nconst Phonebook = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const handleAddContact = ({ name, number, main }) => {\n    dispatch(fetchAddContacts({ name, number, main }));\n  };\n\n  const onDelete = id => {\n    dispatch(fetchDeleteContacts(id));\n  };\n\n  const onChangeFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  const isContacts = Boolean(filteredContacts.length);\n\n  return (\n    <div className={styles.section}>\n      <h2 className={styles.title}>Phonebook</h2>\n      <Form onSubmit={handleAddContact} />\n      <div className={styles.blockContact}>\n        <h2 className={styles.title}>Contacts</h2>\n        <Filter onChangeFilter={onChangeFilter} value={filter} />\n        {isContacts && (\n          <Contacts contacts={filteredContacts} onDelete={onDelete} />\n        )}\n        {!isContacts && <p>There are no contacts in your Phone Book...</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Phonebook;\n","export const getAllContacts = ({contacts}) => contacts.items;\n\n// export const getMainContacts = ({contacts}) => {\n// const mainСontacts = contacts.items.filter(({ main }) => main);\n//     return mainСontacts;\n// }\n// export const getFilteredContacts = ({contacts, filter}) => {\n//     if (!filter) {\n//        console.log(contacts.items)\n//     }\n//     const normalizedFilter = filter.toLowerCase();\n//     const result = contacts.items.filter(({ name }) => {\n//         return name.toLowerCase().includes(normalizedFilter);\n//     });\n//     return result;\n// }\nexport const getMainContacts = ({contacts}) => {\n    if (!contacts || !contacts.items) {\n        return [];\n    }\n    const mainContacts = contacts.items.filter(({ main }) => main);\n    return mainContacts;\n}\n\nexport const getFilteredContacts = ({contacts, filter}) => {\n    if (!contacts || !contacts.items) {\n        return [];\n    }\n    if (!filter) {\n        return contacts.items\n    }\n    const normalizedFilter = filter.toLowerCase();\n    const result = contacts.items.filter(({ name }) => {\n        return name.toLowerCase().includes(normalizedFilter);\n    });\n    return result;\n}"],"names":["onSubmit","initialState","name","number","main","useState","state","setState","onChange","event","target","value","type","checked","newValue","prevState","reset","className","styles","preventDefault","htmlFor","placeholder","id","pattern","title","required","autoFocus","onDelete","elements","contacts","map","style","fontWeight","onClick","onChangeFilter","contactInctance","axios","baseURL","getAllcontacts","get","data","addContact","post","result","deleteContact","delete","fetchAllContacts","createAsyncThunk","_","thunkAPI","api","response","rejectWithValue","fetchAddContacts","condition","getState","normalizedName","toLowerCase","items","find","item","alert","fetchDeleteContacts","filterSlice","createSlice","reducers","setFilter","payload","actions","getFilter","store","filter","filteredContacts","useSelector","getFilteredContacts","dispatch","useDispatch","useEffect","isContacts","Boolean","length","getMainContacts","normalizedFilter","includes"],"sourceRoot":""}